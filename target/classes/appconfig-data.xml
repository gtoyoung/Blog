<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.8.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">


	<tx:annotation-driven />
	<jpa:repositories base-package="test.sample.dao" />
	<context:component-scan
		base-package="test.sample.repository, test.sample.service, test.sample.security" />
		
	<bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource"> 
		<property name="driverClassName" value="org.mariadb.jdbc.Driver" /> <property name="url" 
		value="jdbc:mariadb://119.71.129.160:7043/MyBlog" /> <property name="username" value="root" /> <property 
		name="password" value="wodms0626" /> </bean>
<!-- 	<bean id="dataSource"

		class="org.springframework.jdbc.datasource.SimpleDriverDataSource">

		<property name="driverClass" value="com.mysql.jdbc.Driver" />

		<property name="url"

			value="jdbc:mysql://localhost:3306/myblog?characterEncoding=UTF-8" />

		<property name="username" value="root" />

		<property name="password" value="wodms0626" />

	</bean> -->

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="uploadPath" class="java.lang.String">
		<constructor-arg value="C:\\zzz\\upload" />
	</bean>

	<!-- JPA 예외를 스프링 예외로 변환 -->

	<bean
		class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />
 

	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="test.sample.entity" /> <!-- @Entity 탐색 시작 위치 -->
		<property name="jpaVendorAdapter">
			<!-- 하이버네이트 구현체 사용 -->
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
		</property>

		<property name="jpaProperties"> <!-- 하이버네이트 상세 설정 -->
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop> <!-- 방언 -->
				<prop key="hibernate.show_sql">true</prop>                   <!-- SQL 보기 -->
				<prop key="hibernate.format_sql">true</prop>                 <!-- SQL 정렬해서 보기 -->
				<prop key="hibernate.use_sql_comments">true</prop>           <!-- SQL 코멘트 보기 -->
				<prop key="hibernate.id.new_generator_mappings">true</prop>  <!-- 새 버전의 ID 생성 옵션 -->
				<prop key="hibernate.hbm2ddl.auto">update</prop>             <!-- DDL 자동 생성 -->
			</props>
		</property>

	</bean>

	<mvc:interceptors>
		<bean
			class="org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor">
			<property name="entityManagerFactory" ref="entityManagerFactory" />
		</bean>
	</mvc:interceptors>

</beans>
